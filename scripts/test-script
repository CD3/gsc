#! /usr/bin/python
'''Test a demo script for errors.'''

import sys, os, stat, json, urllib2, subprocess


# check if assert.sh exists and download it if not
if not os.path.exists( "assert.sh" ):
  print "\t`assert.sh` not found. downloading now."

  response = urllib2.urlopen( 'https://raw.github.com/lehmannro/assert.sh/v1.1/assert.sh' )
  content = response.read()
  with open("assert.sh", 'w') as f:
    f.write(content)


for fn in sys.argv[1:]:
  print "TESTING:",fn

  with open(fn) as f:
    lines = f.readlines()
  lines = [x.strip() for x in lines]

  test_lines = []
  test_lines.append("#! /bin/bash")
  test_lines.append("source assert.sh")
  for line in lines:

    toks = line.split('#')
    cmd = toks[0].strip()
    com = toks[1].strip() if len(toks) > 1 else ""

    # get the expected exit status
    exit = "0"
    toks = com.split()
    if len(toks) > 0 and (toks[0] == "e" or toks[0] == "exit"):
      exit = toks[1]

    # escape any special characters in the cmd
    cmd = json.dumps(cmd)
    cmd = 'assert_raises {0} {1}'.format(cmd,exit)

    test_lines.append(cmd)

  test_lines.append("assert_end test")
  # add a blank line so that there will be a newline at the end
  test_lines.append("")

  test_fn = fn+".test"
  with open(test_fn,'w') as f:
    f.write( '\n'.join(test_lines) )
  os.chmod(test_fn,os.stat(test_fn).st_mode|stat.S_IEXEC)

  subprocess.call( os.path.join(".", test_fn), shell=True )
  
 
